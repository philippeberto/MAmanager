{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport dayjs from 'dayjs';\n\nvar MensalidadesResumo = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", 120);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function MensalidadesResumo() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = MensalidadesResumo;\nexport default MensalidadesResumo;\n\nvar somaMensalidades = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var cdate, firstDay, lastDay, data, mensalidadesDB, mensalidades;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            cdate = new Date();\n            firstDay = new Date(cdate.getFullYear(), cdate.getMonth(), 1);\n            lastDay = new Date(cdate.getFullYear(), cdate.getMonth() + 1, 0);\n            firstDay = dayjs(firstDay).format('YYYY-MM-DD');\n            lastDay = dayjs(lastDay).format('YYYY-MM-DD');\n            _context2.next = 7;\n            return fetch('http://localhost:3001/graphql', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n                Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY'\n              },\n              body: JSON.stringify({\n                query: \"{\\n        findMensalidadesByPeriod(user:\\\"philippe.bjj@gmail.com\\\",input:{\\n          idate: \\\"2020-11-01\\\"\\n          fdate: \\\"2020-11-30\\\"\\n        })\\n      }\"\n              })\n            });\n\n          case 7:\n            data = _context2.sent;\n            _context2.next = 10;\n            return data.json();\n\n          case 10:\n            mensalidadesDB = _context2.sent;\n            mensalidades = parseInt(mensalidadesDB.data.findMensalidadesByPeriod);\n            console.log(mensalidades);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function somaMensalidades() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"MensalidadesResumo\");","map":{"version":3,"sources":["C:/Users/phili/Projetos/MAmanager/Components/MensalidadesResumo.js"],"names":["dayjs","MensalidadesResumo","somaMensalidades","cdate","Date","firstDay","getFullYear","getMonth","lastDay","format","fetch","method","headers","Accept","Authorization","body","JSON","stringify","query","data","json","mensalidadesDB","mensalidades","parseInt","findMensalidadesByPeriod","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,kBAAkB;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,6CAElB,GAFkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBA,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;KAAMA,kB;AAKN,eAAeA,kBAAf;;AAEA,IAAMC,gBAAgB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,KADiB,GACT,IAAIC,IAAJ,EADS;AAEnBC,YAAAA,QAFmB,GAER,IAAID,IAAJ,CAASD,KAAK,CAACG,WAAN,EAAT,EAA8BH,KAAK,CAACI,QAAN,EAA9B,EAAgD,CAAhD,CAFQ;AAGnBC,YAAAA,OAHmB,GAGT,IAAIJ,IAAJ,CAASD,KAAK,CAACG,WAAN,EAAT,EAA8BH,KAAK,CAACI,QAAN,KAAmB,CAAjD,EAAoD,CAApD,CAHS;AAIvBF,YAAAA,QAAQ,GAAGL,KAAK,CAACK,QAAD,CAAL,CAAgBI,MAAhB,CAAuB,YAAvB,CAAX;AACAD,YAAAA,OAAO,GAAGR,KAAK,CAACQ,OAAD,CAAL,CAAeC,MAAf,CAAsB,YAAtB,CAAV;AALuB;AAAA,mBAMJC,KAAK,CAAC,+BAAD,EAAkC;AACxDC,cAAAA,MAAM,EAAE,MADgD;AAExDC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEPC,gBAAAA,MAAM,EAAE,kBAFD;AAGPC,gBAAAA,aAAa,EACX;AAJK,eAF+C;AAQxDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,gBAAAA,KAAK;AADc,eAAf;AARkD,aAAlC,CAND;;AAAA;AAMjBC,YAAAA,IANiB;AAAA;AAAA,mBAuBMA,IAAI,CAACC,IAAL,EAvBN;;AAAA;AAuBjBC,YAAAA,cAvBiB;AAwBjBC,YAAAA,YAxBiB,GAwBFC,QAAQ,CAACF,cAAc,CAACF,IAAf,CAAoBK,wBAArB,CAxBN;AAyBvBC,YAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;;AAzBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBpB,gBAAgB;AAAA;AAAA;AAAA,GAAtB","sourcesContent":["import dayjs from 'dayjs'\r\n\r\nconst MensalidadesResumo = async () => {\r\n\r\n  return 120\r\n}\r\n\r\nexport default MensalidadesResumo\r\n\r\nconst somaMensalidades = async () => {\r\n  const cdate = new Date();\r\n  let firstDay = new Date(cdate.getFullYear(), cdate.getMonth(), 1);\r\n  let lastDay = new Date(cdate.getFullYear(), cdate.getMonth() + 1, 0);\r\n  firstDay = dayjs(firstDay).format('YYYY-MM-DD')\r\n  lastDay = dayjs(lastDay).format('YYYY-MM-DD')\r\n  const data = await fetch('http://localhost:3001/graphql', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      Authorization:\r\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `{\r\n        findMensalidadesByPeriod(user:\"philippe.bjj@gmail.com\",input:{\r\n          idate: \"2020-11-01\"\r\n          fdate: \"2020-11-30\"\r\n        })\r\n      }`,\r\n    }),\r\n  })\r\n  const mensalidadesDB = await data.json()\r\n  const mensalidades = parseInt(mensalidadesDB.data.findMensalidadesByPeriod)\r\n  console.log(mensalidades)\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}