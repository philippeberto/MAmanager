{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\phili\\\\Projetos\\\\MAmanager\\\\pages\\\\vendas\\\\index.js\";\nimport React from 'react';\nimport auth0 from '../../lib/auth0';\nimport Link from 'next/link';\n\nconst Vendas = props => {\n  let total = 0;\n\n  if (!props.errors) {\n    if (props.user && props.user !== 'Usuário não logado') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vendas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/vendas/addVenda\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Registar Venda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"table-head\",\n                  children: \"ID Aluno\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 19,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"table-head\",\n                  children: \"Descri\\xE7\\xE3o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"table-head\",\n                  children: \"Valor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"table-head\",\n                  children: \"Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 22,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [props.data.findAllVendas.map(venda => {\n                total = total + venda.price;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"table-hover\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-row\",\n                    children: venda.idAluno\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 30,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-row\",\n                    children: venda.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 31,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-row\",\n                    children: [venda.price, \" \\u20AC\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"table-row\",\n                    children: venda.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 23\n                  }, this)]\n                }, venda.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"table-row\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"table-row\",\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"table-row\",\n                children: [total, \" \\u20AC\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify(props.errors[0].message, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Vendas;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const data = await fetch('http://localhost:3001/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY'\n      },\n      body: JSON.stringify({\n        query: `{\n          findAllVendas(user:\"${session.user.email}\"){\n            id\n            description\n            idAluno\n            price\n            date\n          }\n        }`\n      })\n    });\n    const vendasDB = await data.json();\n    const vendas = vendasDB.data;\n    console.log(vendas);\n    let errors = null;\n\n    if (vendasDB.errors) {\n      errors = vendasDB.errors;\n    }\n\n    if (vendas) {\n      return {\n        props: {\n          errors,\n          user: session.user,\n          data: vendas\n        }\n      };\n    } else {\n      return {\n        props: {\n          errors,\n          user: session.user,\n          data: []\n        }\n      };\n    }\n  }\n\n  return {\n    props: {\n      user: 'Usuário não logado',\n      data: 'Dados inacessíveis'\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/phili/Projetos/MAmanager/pages/vendas/index.js"],"names":["React","auth0","Link","Vendas","props","total","errors","user","data","findAllVendas","map","venda","price","idAluno","description","date","id","JSON","stringify","message","getServerSideProps","req","res","session","getSession","fetch","method","headers","Accept","Authorization","body","query","email","vendasDB","json","vendas","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport auth0 from '../../lib/auth0'\r\nimport Link from 'next/link'\r\n\r\nconst Vendas = (props) => {\r\n  let total = 0\r\n  if (!props.errors) {\r\n    if (props.user && props.user !== 'Usuário não logado') {\r\n      return (\r\n        <div className=\"table-center\">\r\n          <h2>Vendas</h2>\r\n          <Link href=\"/vendas/addVenda\">\r\n            <a>Registar Venda</a>\r\n          </Link>\r\n          <div>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <td className=\"table-head\">ID Aluno</td>\r\n                  <td className=\"table-head\">Descrição</td>\r\n                  <td className=\"table-head\">Valor</td>\r\n                  <td className=\"table-head\">Data</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {props.data.findAllVendas.map((venda) => {\r\n                  total = total + venda.price\r\n                  return (\r\n                    <tr key={venda.id} className=\"table-hover\">\r\n                      <td className=\"table-row\">{venda.idAluno}</td>\r\n                      <td className=\"table-row\">{venda.description}</td>\r\n                      <td className=\"table-row\">{venda.price} €</td>\r\n                      <td className=\"table-row\">{venda.date}</td>\r\n                    </tr>\r\n                  )\r\n                })}\r\n                <td className=\"table-row\"></td>\r\n                <td className=\"table-row\">Total</td>\r\n                <td className=\"table-row\">{total} €</td>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <p>{props.user}</p>\r\n        <p>{props.data}</p>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <p>{JSON.stringify(props.errors[0].message, null, 2)}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Vendas\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n  const session = await auth0.getSession(req)\r\n  if (session) {\r\n    const data = await fetch('http://localhost:3001/graphql', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        Authorization:\r\n          'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY',\r\n      },\r\n      body: JSON.stringify({\r\n        query: `{\r\n          findAllVendas(user:\"${session.user.email}\"){\r\n            id\r\n            description\r\n            idAluno\r\n            price\r\n            date\r\n          }\r\n        }`,\r\n      }),\r\n    })\r\n    const vendasDB = await data.json()\r\n    const vendas = vendasDB.data\r\n    console.log(vendas)\r\n    let errors = null\r\n    if (vendasDB.errors) {\r\n      errors = vendasDB.errors\r\n    }\r\n    if (vendas) {\r\n      return {\r\n        props: {\r\n          errors,\r\n          user: session.user,\r\n          data: vendas,\r\n        },\r\n      }\r\n    } else {\r\n      return {\r\n        props: {\r\n          errors,\r\n          user: session.user,\r\n          data: [],\r\n        },\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      user: 'Usuário não logado',\r\n      data: 'Dados inacessíveis',\r\n    },\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}