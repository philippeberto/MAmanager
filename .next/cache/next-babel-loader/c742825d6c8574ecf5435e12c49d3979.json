{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\phili\\\\Projetos\\\\MAmanager\\\\pages\\\\mensalidades\\\\addMensalidade.js\";\nimport React from 'react';\nimport auth0 from '../../lib/auth0';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst CriarMensalidade = props => {\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    touched,\n    errors\n  } = useFormik({\n    initialValues: {\n      idAluno: '',\n      price: '',\n      paymentDate: '',\n      monthPaid: ''\n    },\n    validationSchema: Yup.object({\n      idAluno: Yup.string().min(20, 'O ID deve ter 20 caracteres').max(20, 'O ID deve ter 20 caracteres').required('Obrigatório'),\n      price: Yup.number().required('Obrigatório'),\n      paymentDate: Yup.date(),\n      monthPaid: Yup.number()\n    }),\n    onSubmit: values => {\n      salvarMensalidade(values, props.user.email);\n      alert(`idAluno: ${values.idAluno},price: ${values.price},paymentDate: ${values.paymentDate},monthPaid: ${values.monthPaid}`);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conteudo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nova Mensalidade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"idAluno\",\n          children: \"ID do Aluno: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.idAluno,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"idAluno\",\n          name: \"idAluno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), touched.idAluno && errors.idAluno ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.idAluno\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Pre\\xE7o: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.price,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"price\",\n          name: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), touched.price && errors.price ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 44\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"paymentDate\",\n          children: \"Data do Pagamento: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.paymentDate,\n          onChange: handleChange,\n          type: \"date\",\n          id: \"paymentDate\",\n          name: \"paymentDate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), touched.paymentDate && errors.paymentDate ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.paymentDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"monthPaid\",\n          children: \"M\\xEAs Pago: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.monthPaid,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"monthPaid\",\n          name: \"monthPaid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), touched.monthPaid && errors.monthPaid ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.monthPaid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CriarMensalidade;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    return {\n      props: {\n        user: session.user\n      }\n    };\n  }\n\n  return {\n    props: {\n      user: 'Usuário não logado',\n      data: 'Dados inacessíveis'\n    }\n  };\n}\n\nconst salvarMensalidade = async (mensalidade, user) => {\n  const data = await fetch('http://localhost:3001/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY'\n    },\n    body: JSON.stringify({\n      query: `mutation{\n        createMensalidade(user:\"${user}\", input: {\n          idAluno: \"${mensalidade.idAluno}\",\n          price: ${mensalidade.price},\n          paymentDate: \"${mensalidade.paymentDate}\",\n          monthPaid: ${mensalidade.monthPaid}\n        })\n      }`\n    })\n  });\n  console.log(data);\n};","map":{"version":3,"sources":["C:/Users/phili/Projetos/MAmanager/pages/mensalidades/addMensalidade.js"],"names":["React","auth0","useFormik","Yup","CriarMensalidade","props","handleSubmit","handleChange","values","touched","errors","initialValues","idAluno","price","paymentDate","monthPaid","validationSchema","object","string","min","max","required","number","date","onSubmit","salvarMensalidade","user","email","alert","getServerSideProps","req","res","session","getSession","data","mensalidade","fetch","method","headers","Accept","Authorization","body","JSON","stringify","query","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport auth0 from '../../lib/auth0'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst CriarMensalidade = (props) => {\r\n  const { handleSubmit, handleChange, values, touched, errors } = useFormik({\r\n    initialValues: {\r\n      idAluno: '',\r\n      price: '',\r\n      paymentDate: '',\r\n      monthPaid: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      idAluno: Yup.string()\r\n        .min(20, 'O ID deve ter 20 caracteres')\r\n        .max(20, 'O ID deve ter 20 caracteres')\r\n        .required('Obrigatório'),\r\n      price: Yup.number().required('Obrigatório'),\r\n      paymentDate: Yup.date(),\r\n      monthPaid: Yup.number(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      salvarMensalidade(values, props.user.email)\r\n      alert(\r\n        `idAluno: ${values.idAluno},price: ${values.price},paymentDate: ${values.paymentDate},monthPaid: ${values.monthPaid}`,\r\n      )\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className=\"conteudo\">\r\n      <h2>Nova Mensalidade</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"idAluno\">ID do Aluno: </label>\r\n          <input\r\n            value={values.idAluno}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"idAluno\"\r\n            name=\"idAluno\"\r\n          />\r\n          {touched.idAluno && errors.idAluno ? (\r\n            <text>{errors.idAluno}</text>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"price\">Preço: </label>\r\n          <input\r\n            value={values.price}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"price\"\r\n            name=\"price\"\r\n          />\r\n          {touched.price && errors.price ? <text>{errors.price}</text> : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"paymentDate\">Data do Pagamento: </label>\r\n          <input\r\n            value={values.paymentDate}\r\n            onChange={handleChange}\r\n            type=\"date\"\r\n            id=\"paymentDate\"\r\n            name=\"paymentDate\"\r\n          />\r\n          {touched.paymentDate && errors.paymentDate ? (\r\n            <text>{errors.paymentDate}</text>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"monthPaid\">Mês Pago: </label>\r\n          <input\r\n            value={values.monthPaid}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"monthPaid\"\r\n            name=\"monthPaid\"\r\n          />\r\n          {touched.monthPaid && errors.monthPaid ? (\r\n            <text>{errors.monthPaid}</text>\r\n          ) : null}\r\n        </div>\r\n        <input type=\"submit\" value=\"Cadastrar\"></input>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CriarMensalidade\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n  const session = await auth0.getSession(req)\r\n  if (session) {\r\n    return {\r\n      props: {\r\n        user: session.user,\r\n      },\r\n    }\r\n  }\r\n  return {\r\n    props: {\r\n      user: 'Usuário não logado',\r\n      data: 'Dados inacessíveis',\r\n    },\r\n  }\r\n}\r\n\r\nconst salvarMensalidade = async (mensalidade, user) => {\r\n  const data = await fetch('http://localhost:3001/graphql', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      Authorization:\r\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `mutation{\r\n        createMensalidade(user:\"${user}\", input: {\r\n          idAluno: \"${mensalidade.idAluno}\",\r\n          price: ${mensalidade.price},\r\n          paymentDate: \"${mensalidade.paymentDate}\",\r\n          monthPaid: ${mensalidade.monthPaid}\r\n        })\r\n      }`,\r\n    }),\r\n  })\r\n  console.log(data)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}