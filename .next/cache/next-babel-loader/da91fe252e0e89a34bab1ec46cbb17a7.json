{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\phili\\\\Projetos\\\\MAmanager\\\\Components\\\\MensalidadesResumo.js\";\nimport dayjs from 'dayjs';\nconst cdate = new Date();\nlet firstDay = new Date(cdate.getFullYear(), cdate.getMonth(), 1);\nlet lastDay = new Date(cdate.getFullYear(), cdate.getMonth() + 1, 0);\nfirstDay = dayjs(firstDay).format('YYYY-MM-DD');\nlastDay = dayjs(lastDay).format('YYYY-MM-DD');\n\nconst MensalidadesResumo = ({\n  email\n}) => {\n  buscarMensalidade(email);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Mensalidades\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Resumo das Mensalidades\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Total no M\\xEAs atual:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Total no M\\xEAs atual:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MensalidadesResumo;\n\nconst buscarMensalidade = async email => {\n  const data = await fetch('http://localhost:3001/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY'\n    },\n    body: JSON.stringify({\n      query: `{ \n          findMensalidadesByPeriod(user: \"${email}\", input: {\n            idate: ${firstDay}\n            fdate: ${lastDay}\n          }) {\n            price\n        } }`\n    })\n  });\n  const mensalidadesDB = await data.json();\n  const mensalidades = mensalidadesDB.data;\n  let errors = null;\n\n  if (mensalidadesDB.errors) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", mensalidadesDB.errors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  let total = 0;\n  mensalidades.map(mensalidade => {\n    total += mensalidade.price;\n  });\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Total: \", total]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/phili/Projetos/MAmanager/Components/MensalidadesResumo.js"],"names":["dayjs","cdate","Date","firstDay","getFullYear","getMonth","lastDay","format","MensalidadesResumo","email","buscarMensalidade","data","fetch","method","headers","Accept","Authorization","body","JSON","stringify","query","mensalidadesDB","json","mensalidades","errors","total","map","mensalidade","price"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,IAAIC,QAAQ,GAAG,IAAID,IAAJ,CAASD,KAAK,CAACG,WAAN,EAAT,EAA8BH,KAAK,CAACI,QAAN,EAA9B,EAAgD,CAAhD,CAAf;AACA,IAAIC,OAAO,GAAG,IAAIJ,IAAJ,CAASD,KAAK,CAACG,WAAN,EAAT,EAA8BH,KAAK,CAACI,QAAN,KAAmB,CAAjD,EAAoD,CAApD,CAAd;AACAF,QAAQ,GAAGH,KAAK,CAACG,QAAD,CAAL,CAAgBI,MAAhB,CAAuB,YAAvB,CAAX;AACAD,OAAO,GAAGN,KAAK,CAACM,OAAD,CAAL,CAAeC,MAAf,CAAsB,YAAtB,CAAV;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACxCC,EAAAA,iBAAiB,CAACD,KAAD,CAAjB;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAXD;;AAaA,eAAeD,kBAAf;;AAEA,MAAME,iBAAiB,GAAG,MAAOD,KAAP,IAAiB;AACzC,QAAME,IAAI,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AACxDC,IAAAA,MAAM,EAAE,MADgD;AAExDC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE,kBAFD;AAGPC,MAAAA,aAAa,EACX;AAJK,KAF+C;AAQxDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAG;AACd,4CAA4CX,KAAM;AAClD,qBAAqBN,QAAS;AAC9B,qBAAqBG,OAAQ;AAC7B;AACA;AACA;AAPyB,KAAf;AARkD,GAAlC,CAAxB;AAkBA,QAAMe,cAAc,GAAG,MAAMV,IAAI,CAACW,IAAL,EAA7B;AACA,QAAMC,YAAY,GAAGF,cAAc,CAACV,IAApC;AACA,MAAIa,MAAM,GAAG,IAAb;;AACA,MAAIH,cAAc,CAACG,MAAnB,EAA2B;AACzB,wBAAO;AAAA,sBAAKH,cAAc,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIC,KAAK,GAAG,CAAZ;AACAF,EAAAA,YAAY,CAACG,GAAb,CAAkBC,WAAD,IAAiB;AAChCF,IAAAA,KAAK,IAAIE,WAAW,CAACC,KAArB;AACD,GAFD;AAGA,sBACE;AAAA,0BAAWH,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAhCD","sourcesContent":["import dayjs from 'dayjs'\r\n\r\nconst cdate = new Date();\r\nlet firstDay = new Date(cdate.getFullYear(), cdate.getMonth(), 1);\r\nlet lastDay = new Date(cdate.getFullYear(), cdate.getMonth() + 1, 0);\r\nfirstDay = dayjs(firstDay).format('YYYY-MM-DD')\r\nlastDay = dayjs(lastDay).format('YYYY-MM-DD')\r\n\r\nconst MensalidadesResumo = ({ email }) => {\r\n  buscarMensalidade(email)\r\n  return (\r\n    <div>\r\n      <h3>Mensalidades</h3>\r\n      <p>Resumo das Mensalidades</p>\r\n      <p>Total no Mês atual:</p>\r\n      <p>Total no Mês atual:</p>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MensalidadesResumo\r\n\r\nconst buscarMensalidade = async (email) => {\r\n  const data = await fetch('http://localhost:3001/graphql', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      Authorization:\r\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `{ \r\n          findMensalidadesByPeriod(user: \"${email}\", input: {\r\n            idate: ${firstDay}\r\n            fdate: ${lastDay}\r\n          }) {\r\n            price\r\n        } }`,\r\n    }),\r\n  })\r\n  const mensalidadesDB = await data.json()\r\n  const mensalidades = mensalidadesDB.data\r\n  let errors = null\r\n  if (mensalidadesDB.errors) {\r\n    return <p> {mensalidadesDB.errors}</p>\r\n  }\r\n  let total = 0\r\n  mensalidades.map((mensalidade) => {\r\n    total += mensalidade.price\r\n  })\r\n  return (\r\n    <p>Total: {total}</p>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}