{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\phili\\\\Projetos\\\\MAmanager\\\\Components\\\\MensalidadesResumo.js\";\n\nconst MensalidadesResumo = () => {\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    touched,\n    errors\n  } = useFormik({\n    initialValues: {\n      date1: '',\n      date2: ''\n    },\n    validationSchema: Yup.object({\n      date1: Yup.date().required('Obrigatório'),\n      date2: Yup.date().required('Obrigatório')\n    }),\n    onSubmit: values => {\n      salvarAluno(values, props.user.email);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Mensalidades\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Resumo das Mensalidades\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MensalidadesResumo;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const data = await fetch('http://localhost:3001/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY'\n      },\n      body: JSON.stringify({\n        query: `{ \n          findAllAlunos(user: \"${session.user.email}\") {\n            id\n            aluno\n            birthDate\n            dueDate\n            gender\n            location\n        } }`\n      })\n    });\n    const alunosDB = await data.json();\n    const alunos = alunosDB.data;\n    let errors = null;\n\n    if (alunosDB.errors) {\n      errors = alunosDB.errors;\n    }\n\n    return {\n      props: {\n        errors,\n        user: session.user,\n        data: alunos\n      }\n    };\n  }\n\n  return {\n    props: {\n      user: 'Usuário não logado',\n      data: 'Dados inacessíveis'\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/phili/Projetos/MAmanager/Components/MensalidadesResumo.js"],"names":["MensalidadesResumo","handleSubmit","handleChange","values","touched","errors","useFormik","initialValues","date1","date2","validationSchema","Yup","object","date","required","onSubmit","salvarAluno","props","user","email","getServerSideProps","req","res","session","auth0","getSession","data","fetch","method","headers","Accept","Authorization","body","JSON","stringify","query","alunosDB","json","alunos"],"mappings":";;;AAEA,MAAMA,kBAAkB,GAAG,MAAM;AAC/B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA,MAA9B;AAAsCC,IAAAA,OAAtC;AAA+CC,IAAAA;AAA/C,MAA0DC,SAAS,CAAC;AACxEC,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,KAAK,EAAE;AAFM,KADyD;AAKxEC,IAAAA,gBAAgB,EAAEC,GAAG,CAACC,MAAJ,CAAW;AAC3BJ,MAAAA,KAAK,EAAEG,GAAG,CAACE,IAAJ,GAAWC,QAAX,CAAoB,aAApB,CADoB;AAE3BL,MAAAA,KAAK,EAAEE,GAAG,CAACE,IAAJ,GAAWC,QAAX,CAAoB,aAApB;AAFoB,KAAX,CALsD;AASxEC,IAAAA,QAAQ,EAAGZ,MAAD,IAAY;AACpBa,MAAAA,WAAW,CAACb,MAAD,EAASc,KAAK,CAACC,IAAN,CAAWC,KAApB,CAAX;AACD;AAXuE,GAAD,CAAzE;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAtBD;;AAwBA,eAAenB,kBAAf;AAEA,OAAO,eAAeoB,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAAgD;AACrD,QAAMC,OAAO,GAAG,MAAMC,KAAK,CAACC,UAAN,CAAiBJ,GAAjB,CAAtB;;AACA,MAAIE,OAAJ,EAAa;AACX,UAAMG,IAAI,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AACxDC,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE,kBAFD;AAGPC,QAAAA,aAAa,EACX;AAJK,OAF+C;AAQxDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAG;AAChB,iCAAiCZ,OAAO,CAACL,IAAR,CAAaC,KAAM;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AAT2B,OAAf;AARkD,KAAlC,CAAxB;AAoBA,UAAMiB,QAAQ,GAAG,MAAMV,IAAI,CAACW,IAAL,EAAvB;AACA,UAAMC,MAAM,GAAGF,QAAQ,CAACV,IAAxB;AACA,QAAIrB,MAAM,GAAG,IAAb;;AACA,QAAI+B,QAAQ,CAAC/B,MAAb,EAAqB;AACnBA,MAAAA,MAAM,GAAG+B,QAAQ,CAAC/B,MAAlB;AACD;;AAED,WAAO;AACLY,MAAAA,KAAK,EAAE;AACLZ,QAAAA,MADK;AAELa,QAAAA,IAAI,EAAEK,OAAO,CAACL,IAFT;AAGLQ,QAAAA,IAAI,EAAEY;AAHD;AADF,KAAP;AAOD;;AACD,SAAO;AACLrB,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,oBADD;AAELQ,MAAAA,IAAI,EAAE;AAFD;AADF,GAAP;AAMD","sourcesContent":["\r\n\r\nconst MensalidadesResumo = () => {\r\n  const { handleSubmit, handleChange, values, touched, errors } = useFormik({\r\n    initialValues: {\r\n      date1: '',\r\n      date2: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      date1: Yup.date().required('Obrigatório'),\r\n      date2: Yup.date().required('Obrigatório')\r\n    }),\r\n    onSubmit: (values) => {\r\n      salvarAluno(values, props.user.email)\r\n    }\r\n  })\r\n  return (\r\n    <div>\r\n      <h3>Mensalidades</h3>\r\n      <p>Resumo das Mensalidades</p>\r\n      <input type='date' name />\r\n      <input type='date' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MensalidadesResumo\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n  const session = await auth0.getSession(req)\r\n  if (session) {\r\n    const data = await fetch('http://localhost:3001/graphql', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        Authorization:\r\n          'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY',\r\n      },\r\n      body: JSON.stringify({\r\n        query: `{ \r\n          findAllAlunos(user: \"${session.user.email}\") {\r\n            id\r\n            aluno\r\n            birthDate\r\n            dueDate\r\n            gender\r\n            location\r\n        } }`,\r\n      }),\r\n    })\r\n    const alunosDB = await data.json()\r\n    const alunos = alunosDB.data\r\n    let errors = null\r\n    if (alunosDB.errors) {\r\n      errors = alunosDB.errors\r\n    }\r\n\r\n    return {\r\n      props: {\r\n        errors,\r\n        user: session.user,\r\n        data: alunos,\r\n      },\r\n    }\r\n  }\r\n  return {\r\n    props: {\r\n      user: 'Usuário não logado',\r\n      data: 'Dados inacessíveis'\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}