{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\phili\\\\Projetos\\\\MAmanager\\\\Components\\\\MensalidadesResumo.js\",\n    _this = this;\n\nimport dayjs from 'dayjs';\nvar cdate = new Date();\nvar firstDay = new Date(cdate.getFullYear(), cdate.getMonth(), 1);\nvar lastDay = new Date(cdate.getFullYear(), cdate.getMonth() + 1, 0);\nfirstDay = dayjs(firstDay).format('YYYY-MM-DD');\nlastDay = dayjs(lastDay).format('YYYY-MM-DD');\n\nvar MensalidadesResumo = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var email, casa, busca;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = _ref.email;\n            _context.next = 3;\n            return buscarMensalidade(email);\n\n          case 3:\n            casa = _context.sent;\n            console.log(casa);\n            busca = 90;\n            return _context.abrupt(\"return\", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Mensalidades\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 15,\n                columnNumber: 7\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Resumo das Mensalidades\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 7\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Total no M\\xEAs atual: \", busca, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 7\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 5\n            }, _this));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function MensalidadesResumo(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n_c = MensalidadesResumo;\nexport default MensalidadesResumo;\n\nvar buscarMensalidade = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email) {\n    var data, mensalidadesDB, mensalidades, errors, total;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch('http://localhost:3001/graphql', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n                Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY'\n              },\n              body: JSON.stringify({\n                query: \"{ \\n        findMensalidadesByPeriod(user: \\\"philippe.bjj@gmail.com\\\", input: {\\n            idate: \\\"\".concat(firstDay, \"\\\"\\n            fdate: \\\"\").concat(lastDay, \"\\\"\\n          }) {\\n            price\\n        } }\")\n              })\n            });\n\n          case 2:\n            data = _context2.sent;\n            _context2.next = 5;\n            return data.json();\n\n          case 5:\n            mensalidadesDB = _context2.sent;\n            mensalidades = mensalidadesDB.data.findMensalidadesByPeriod;\n            errors = null;\n\n            if (!mensalidadesDB.errors) {\n              _context2.next = 10;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", 'error');\n\n          case 10:\n            total = 0;\n            mensalidades.map(function (mensalidade) {\n              total += mensalidade.price;\n            });\n            return _context2.abrupt(\"return\", total);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function buscarMensalidade(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"MensalidadesResumo\");","map":{"version":3,"sources":["C:/Users/phili/Projetos/MAmanager/Components/MensalidadesResumo.js"],"names":["dayjs","cdate","Date","firstDay","getFullYear","getMonth","lastDay","format","MensalidadesResumo","email","buscarMensalidade","casa","console","log","busca","fetch","method","headers","Accept","Authorization","body","JSON","stringify","query","data","json","mensalidadesDB","mensalidades","findMensalidadesByPeriod","errors","total","map","mensalidade","price"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,IAAIC,QAAQ,GAAG,IAAID,IAAJ,CAASD,KAAK,CAACG,WAAN,EAAT,EAA8BH,KAAK,CAACI,QAAN,EAA9B,EAAgD,CAAhD,CAAf;AACA,IAAIC,OAAO,GAAG,IAAIJ,IAAJ,CAASD,KAAK,CAACG,WAAN,EAAT,EAA8BH,KAAK,CAACI,QAAN,KAAmB,CAAjD,EAAoD,CAApD,CAAd;AACAF,QAAQ,GAAGH,KAAK,CAACG,QAAD,CAAL,CAAgBI,MAAhB,CAAuB,YAAvB,CAAX;AACAD,OAAO,GAAGN,KAAK,CAACM,OAAD,CAAL,CAAeC,MAAf,CAAsB,YAAtB,CAAV;;AAEA,IAAMC,kBAAkB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,QAASA,KAAT;AAAA;AAAA,mBACNC,iBAAiB,CAACD,KAAD,CADX;;AAAA;AACnBE,YAAAA,IADmB;AAEzBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACMG,YAAAA,KAHmB,GAGX,EAHW;AAAA,0DAKvB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,eAGE;AAAA,sDAAwBA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,qBALuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBN,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;KAAMA,kB;AAcN,eAAeA,kBAAf;;AAEA,IAAME,iBAAiB;AAAA,uEAAG,kBAAOD,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLM,KAAK,CAAC,+BAAD,EAAkC;AACxDC,cAAAA,MAAM,EAAE,MADgD;AAExDC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEPC,gBAAAA,MAAM,EAAE,kBAFD;AAGPC,gBAAAA,aAAa,EACX;AAJK,eAF+C;AAQxDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,gBAAAA,KAAK,kHAEWpB,QAFX,sCAGWG,OAHX;AADc,eAAf;AARkD,aAAlC,CADA;;AAAA;AAClBkB,YAAAA,IADkB;AAAA;AAAA,mBAmBKA,IAAI,CAACC,IAAL,EAnBL;;AAAA;AAmBlBC,YAAAA,cAnBkB;AAoBlBC,YAAAA,YApBkB,GAoBHD,cAAc,CAACF,IAAf,CAAoBI,wBApBjB;AAqBpBC,YAAAA,MArBoB,GAqBX,IArBW;;AAAA,iBAsBpBH,cAAc,CAACG,MAtBK;AAAA;AAAA;AAAA;;AAAA,8CAuBf,OAvBe;;AAAA;AAyBpBC,YAAAA,KAzBoB,GAyBZ,CAzBY;AA0BxBH,YAAAA,YAAY,CAACI,GAAb,CAAiB,UAACC,WAAD,EAAiB;AAChCF,cAAAA,KAAK,IAAIE,WAAW,CAACC,KAArB;AACD,aAFD;AA1BwB,8CA6BjBH,KA7BiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBpB,iBAAiB;AAAA;AAAA;AAAA,GAAvB","sourcesContent":["import dayjs from 'dayjs'\r\n\r\nconst cdate = new Date();\r\nlet firstDay = new Date(cdate.getFullYear(), cdate.getMonth(), 1);\r\nlet lastDay = new Date(cdate.getFullYear(), cdate.getMonth() + 1, 0);\r\nfirstDay = dayjs(firstDay).format('YYYY-MM-DD')\r\nlastDay = dayjs(lastDay).format('YYYY-MM-DD')\r\n\r\nconst MensalidadesResumo = async ({ email }) => {\r\n  const casa = await buscarMensalidade(email)\r\n  console.log(casa)\r\n  const busca = 90\r\n  return (\r\n    <div>\r\n      <h3>Mensalidades</h3>\r\n      <p>Resumo das Mensalidades</p>\r\n      <p>Total no MÃªs atual: {busca} </p>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MensalidadesResumo\r\n\r\nconst buscarMensalidade = async (email) => {\r\n  const data = await fetch('http://localhost:3001/graphql', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      Authorization:\r\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `{ \r\n        findMensalidadesByPeriod(user: \"philippe.bjj@gmail.com\", input: {\r\n            idate: \"${firstDay}\"\r\n            fdate: \"${lastDay}\"\r\n          }) {\r\n            price\r\n        } }`,\r\n    }),\r\n  })\r\n  const mensalidadesDB = await data.json()\r\n  const mensalidades = mensalidadesDB.data.findMensalidadesByPeriod\r\n  let errors = null\r\n  if (mensalidadesDB.errors) {\r\n    return 'error'\r\n  }\r\n  let total = 0\r\n  mensalidades.map((mensalidade) => {\r\n    total += mensalidade.price\r\n  })\r\n  return total\r\n}\r\n"]},"metadata":{},"sourceType":"module"}