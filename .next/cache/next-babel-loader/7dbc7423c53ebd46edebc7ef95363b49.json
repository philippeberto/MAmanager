{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\phili\\\\Projetos\\\\MAmanager\\\\pages\\\\seguros\\\\addSeguro.js\";\nimport React from 'react';\nimport auth0 from '../../lib/auth0';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst NovaVenda = props => {\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    touched,\n    errors\n  } = useFormik({\n    initialValues: {\n      idAluno: '',\n      idate: '',\n      fdate: '',\n      price: ''\n    },\n    validationSchema: Yup.object({\n      idAluno: Yup.string().min(20, 'O ID deve ter 20 caracteres').max(20, 'O ID deve ter 20 caracteres').required('Obrigatório'),\n      idate: Yup.date(),\n      fdate: Yup.date(),\n      price: Yup.number()\n    }),\n    onSubmit: values => {\n      salvarSeguro(values, props.user.email);\n      alert(`idAluno: ${values.idAluno},Data Inicial: ${values.idate},Data Final: ${values.fdate},Preço: ${values.price}`);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conteudo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Novo Seguro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"idAluno\",\n          children: \"ID do Aluno: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.idAluno,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"idAluno\",\n          name: \"idAluno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), touched.idAluno && errors.idAluno ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.idAluno\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"idate\",\n          children: \"Data Inicial: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.idate,\n          onChange: handleChange,\n          type: \"date\",\n          id: \"idate\",\n          name: \"idate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), touched.idate && errors.idate ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.idate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fdate\",\n          children: \"Data Final: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.fdate,\n          onChange: handleChange,\n          type: \"date\",\n          id: \"fdate\",\n          name: \"fdate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), touched.fdate && errors.fdate ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.fdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Valor: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.price,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"price\",\n          name: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), touched.price && errors.price ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 44\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nexport default NovaVenda;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    return {\n      props: {\n        user: session.user\n      }\n    };\n  }\n\n  return {\n    props: {\n      user: \"O usuário não está logado.\"\n    }\n  };\n}\n\nconst salvarSeguro = async (seguro, email) => {\n  const data = await fetch('http://localhost:3001/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY'\n    },\n    body: JSON.stringify({\n      query: `mutation{\n        createSeguro(user:\"${email}\", input: {\n          idAluno: \"${seguro.idAluno}\",\n          idate: \"${seguro.idate}\",\n          fdate: \"${seguro.fdate}\",\n          price: ${seguro.price},\n        }){\n          idAluno\n          status\n        }\n      }`\n    })\n  });\n  console.log(data.json());\n};","map":{"version":3,"sources":["C:/Users/phili/Projetos/MAmanager/pages/seguros/addSeguro.js"],"names":["React","auth0","useFormik","Yup","NovaVenda","props","handleSubmit","handleChange","values","touched","errors","initialValues","idAluno","idate","fdate","price","validationSchema","object","string","min","max","required","date","number","onSubmit","salvarSeguro","user","email","alert","getServerSideProps","req","res","session","getSession","seguro","data","fetch","method","headers","Accept","Authorization","body","JSON","stringify","query","console","log","json"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport auth0 from '../../lib/auth0'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst NovaVenda = (props) => {\r\n  const { handleSubmit, handleChange, values, touched, errors } = useFormik({\r\n    initialValues: {\r\n      idAluno: '',\r\n      idate: '',\r\n      fdate: '',\r\n      price: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      idAluno: Yup.string()\r\n        .min(20, 'O ID deve ter 20 caracteres')\r\n        .max(20, 'O ID deve ter 20 caracteres')\r\n        .required('Obrigatório'),\r\n      idate: Yup.date(),\r\n      fdate: Yup.date(),\r\n      price: Yup.number(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      salvarSeguro(values, props.user.email)\r\n      alert(\r\n        `idAluno: ${values.idAluno},Data Inicial: ${values.idate},Data Final: ${values.fdate},Preço: ${values.price}`,\r\n      )\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className=\"conteudo\">\r\n      <h2>Novo Seguro</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"idAluno\">ID do Aluno: </label>\r\n          <input\r\n            value={values.idAluno}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"idAluno\"\r\n            name=\"idAluno\"\r\n          />\r\n          {touched.idAluno && errors.idAluno ? (\r\n            <text>{errors.idAluno}</text>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"idate\">Data Inicial: </label>\r\n          <input\r\n            value={values.idate}\r\n            onChange={handleChange}\r\n            type=\"date\"\r\n            id=\"idate\"\r\n            name=\"idate\"\r\n          />\r\n          {touched.idate && errors.idate ? (\r\n            <text>{errors.idate}</text>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"fdate\">Data Final: </label>\r\n          <input\r\n            value={values.fdate}\r\n            onChange={handleChange}\r\n            type=\"date\"\r\n            id=\"fdate\"\r\n            name=\"fdate\"\r\n          />\r\n          {touched.fdate && errors.fdate ? (\r\n            <text>{errors.fdate}</text>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"price\">Valor: </label>\r\n          <input\r\n            value={values.price}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"price\"\r\n            name=\"price\"\r\n          />\r\n          {touched.price && errors.price ? <text>{errors.price}</text> : null}\r\n        </div>\r\n        <input type=\"submit\" value=\"Cadastrar\"></input>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NovaVenda\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n  const session = await auth0.getSession(req)\r\n  if (session) {\r\n    return {\r\n      props: {\r\n        user: session.user\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    props: {\r\n      user: \"O usuário não está logado.\"\r\n    }\r\n  }\r\n}\r\n\r\nconst salvarSeguro = async (seguro, email) => {\r\n  const data = await fetch('http://localhost:3001/graphql', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      Authorization:\r\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `mutation{\r\n        createSeguro(user:\"${email}\", input: {\r\n          idAluno: \"${seguro.idAluno}\",\r\n          idate: \"${seguro.idate}\",\r\n          fdate: \"${seguro.fdate}\",\r\n          price: ${seguro.price},\r\n        }){\r\n          idAluno\r\n          status\r\n        }\r\n      }`,\r\n    }),\r\n  })\r\n  console.log(data.json())\r\n}\r\n"]},"metadata":{},"sourceType":"module"}