{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\phili\\\\Projetos\\\\MAmanager\\\\pages\\\\vendas\\\\addVenda.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nvar NovaVenda = function NovaVenda(props) {\n  _s();\n\n  var _useFormik = useFormik({\n    initialValues: {\n      idAluno: '',\n      price: '',\n      date: '',\n      description: ''\n    },\n    validationSchema: Yup.object({\n      idAluno: Yup.string().min(20, 'O ID deve ter 20 caracteres').max(20, 'O ID deve ter 20 caracteres').required('Obrigatório'),\n      price: Yup.number().required('Obrigatório'),\n      date: Yup.date(),\n      description: Yup.string().min(5, 'A descrição deve ter 20 caracteres').max(50, 'A descrição deve ter 20 caracteres').required('Obrigatório')\n    }),\n    onSubmit: function onSubmit(values) {\n      salvarVenda(values, props.user.email);\n      alert(\"idAluno: \".concat(values.idAluno, \",price: \").concat(values.price, \",date: \").concat(values.date, \",description: \").concat(values.description));\n    }\n  }),\n      handleSubmit = _useFormik.handleSubmit,\n      handleChange = _useFormik.handleChange,\n      values = _useFormik.values,\n      touched = _useFormik.touched,\n      errors = _useFormik.errors;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conteudo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nova Mensalidade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"idAluno\",\n          children: \"ID do Aluno: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.idAluno,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"idAluno\",\n          name: \"idAluno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this), touched.idAluno && errors.idAluno ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.idAluno\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, _this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Pre\\xE7o: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.price,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"price\",\n          name: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this), touched.price && errors.price ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 44\n        }, _this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Data: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.date,\n          onChange: handleChange,\n          type: \"date\",\n          id: \"date\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this), touched.date && errors.date ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, _this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Descri\\xE7\\xE3o: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.description,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"description\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, _this), touched.description && errors.description ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, _this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(NovaVenda, \"G2gPppaHxabIZCEXmdxIpxNZY1g=\", false, function () {\n  return [useFormik];\n});\n\n_c = NovaVenda;\nexport var __N_SSP = true;\nexport default NovaVenda;\n\nvar salvarVenda = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(venda, user) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('http://localhost:3001/graphql', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n                Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY'\n              },\n              body: JSON.stringify({\n                query: \"mutation{\\n        createVenda(user:\\\"\".concat(user, \"\\\", input: {\\n          idAluno: \\\"\").concat(venda.idAluno, \"\\\",\\n          price: \").concat(venda.price, \",\\n          date: \\\"\").concat(venda.date, \"\\\",\\n          description: \\\"\").concat(venda.description, \"\\\",\\n        }){\\n          id\\n          description\\n        }\\n      }\")\n              })\n            });\n\n          case 2:\n            data = _context.sent;\n            console.log(data.json());\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function salvarVenda(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"NovaVenda\");","map":{"version":3,"sources":["C:/Users/phili/Projetos/MAmanager/pages/vendas/addVenda.js"],"names":["React","useFormik","Yup","NovaVenda","props","initialValues","idAluno","price","date","description","validationSchema","object","string","min","max","required","number","onSubmit","values","salvarVenda","user","email","alert","handleSubmit","handleChange","touched","errors","venda","fetch","method","headers","Accept","Authorization","body","JSON","stringify","query","data","console","log","json"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport auth0 from '../../lib/auth0'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst NovaVenda = (props) => {\r\n  const { handleSubmit, handleChange, values, touched, errors } = useFormik({\r\n    initialValues: {\r\n      idAluno: '',\r\n      price: '',\r\n      date: '',\r\n      description: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      idAluno: Yup.string()\r\n        .min(20, 'O ID deve ter 20 caracteres')\r\n        .max(20, 'O ID deve ter 20 caracteres')\r\n        .required('Obrigatório'),\r\n      price: Yup.number().required('Obrigatório'),\r\n      date: Yup.date(),\r\n      description: Yup.string()\r\n        .min(5, 'A descrição deve ter 20 caracteres')\r\n        .max(50, 'A descrição deve ter 20 caracteres')\r\n        .required('Obrigatório'),\r\n    }),\r\n    onSubmit: (values) => {\r\n      salvarVenda(values, props.user.email)\r\n      alert(\r\n        `idAluno: ${values.idAluno},price: ${values.price},date: ${values.date},description: ${values.description}`,\r\n      )\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className=\"conteudo\">\r\n      <h2>Nova Mensalidade</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"idAluno\">ID do Aluno: </label>\r\n          <input\r\n            value={values.idAluno}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"idAluno\"\r\n            name=\"idAluno\"\r\n          />\r\n          {touched.idAluno && errors.idAluno ? (\r\n            <text>{errors.idAluno}</text>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"price\">Preço: </label>\r\n          <input\r\n            value={values.price}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"price\"\r\n            name=\"price\"\r\n          />\r\n          {touched.price && errors.price ? <text>{errors.price}</text> : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"date\">Data: </label>\r\n          <input\r\n            value={values.date}\r\n            onChange={handleChange}\r\n            type=\"date\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n          />\r\n          {touched.date && errors.date ? (\r\n            <text>{errors.date}</text>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"description\">Descrição: </label>\r\n          <input\r\n            value={values.description}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n          />\r\n          {touched.description && errors.description ? (\r\n            <text>{errors.description}</text>\r\n          ) : null}\r\n        </div>\r\n        <input type=\"submit\" value=\"Cadastrar\"></input>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NovaVenda\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n  const session = await auth0.getSession(req)\r\n  if (session) {\r\n    return {\r\n      props: {\r\n        user: session.user\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    props: {\r\n      user: \"O usuário não está logado.\"\r\n    }\r\n  }\r\n}\r\n\r\nconst salvarVenda = async (venda, user) => {\r\n  const data = await fetch('http://localhost:3001/graphql', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      Authorization:\r\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `mutation{\r\n        createVenda(user:\"${user}\", input: {\r\n          idAluno: \"${venda.idAluno}\",\r\n          price: ${venda.price},\r\n          date: \"${venda.date}\",\r\n          description: \"${venda.description}\",\r\n        }){\r\n          id\r\n          description\r\n        }\r\n      }`,\r\n    }),\r\n  })\r\n  console.log(data.json())\r\n}\r\n"]},"metadata":{},"sourceType":"module"}