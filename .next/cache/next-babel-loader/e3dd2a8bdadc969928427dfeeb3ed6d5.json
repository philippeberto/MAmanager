{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\phili\\\\Projetos\\\\MAmanager\\\\pages\\\\compras\\\\addCompra.js\";\nimport React from 'react';\nimport auth0 from '../../lib/auth0';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst addCompra = props => {\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    touched,\n    errors\n  } = useFormik({\n    initialValues: {\n      description: '',\n      price: '',\n      date: ''\n    },\n    validationSchema: Yup.object({\n      description: Yup.string().required('Obrigatório'),\n      price: Yup.number().required('Obrigatório'),\n      date: Yup.date().required('Obrigatório')\n    }),\n    onSubmit: values => {\n      salvarCompra(values, props.user.email);\n      alert(`Compra ${values.description} salva com sucesso!`);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conteudo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registar Compra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Descri\\xE7\\xE3o: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.description,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"description\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), touched.description && errors.description ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Valor: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.price,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"price\",\n          name: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), touched.price && errors.price ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 44\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Data: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.date,\n          onChange: handleChange,\n          type: \"date\",\n          id: \"date\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), touched.date && errors.date ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 43\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\nexport default addCompra;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    return {\n      props: {\n        user: session.user\n      }\n    };\n  }\n\n  return {\n    props: {\n      user: 'Usuário não logado',\n      data: 'Dados inacessíveis'\n    }\n  };\n}\n\nconst salvarCompra = async (despesa, email) => {\n  console.log(despesa);\n  console.log(email);\n  const data = await fetch('http://localhost:3001/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY'\n    },\n    body: JSON.stringify({\n      query: `mutation{\n        createCompra(user:\"${email}\", input: {\n          description: \"${despesa.description}\"\n          price: ${despesa.price}, \n          date: \"${despesa.date}\", \n        }){\n          id\n          description\n        }\n      }`\n    })\n  });\n  console.log(data);\n};","map":{"version":3,"sources":["C:/Users/phili/Projetos/MAmanager/pages/compras/addCompra.js"],"names":["React","auth0","useFormik","Yup","addCompra","props","handleSubmit","handleChange","values","touched","errors","initialValues","description","price","date","validationSchema","object","string","required","number","onSubmit","salvarCompra","user","email","alert","getServerSideProps","req","res","session","getSession","data","despesa","console","log","fetch","method","headers","Accept","Authorization","body","JSON","stringify","query"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport auth0 from '../../lib/auth0'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst addCompra = (props) => {\r\n  const { handleSubmit, handleChange, values, touched, errors } = useFormik({\r\n    initialValues: {\r\n      description: '',\r\n      price: '',\r\n      date: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      description: Yup.string().required('Obrigatório'),\r\n      price: Yup.number().required('Obrigatório'),\r\n      date: Yup.date().required('Obrigatório')\r\n    }),\r\n    onSubmit: (values) => {\r\n      salvarCompra(values, props.user.email)\r\n      alert(`Compra ${values.description} salva com sucesso!`)\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className=\"conteudo\">\r\n      <h2>Registar Compra</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"description\">Descrição: </label>\r\n          <input\r\n            value={values.description}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n          />\r\n          {touched.description && errors.description ? (\r\n            <text>{errors.description}</text>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"price\">Valor: </label>\r\n          <input\r\n            value={values.price}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"price\"\r\n            name=\"price\"\r\n          />\r\n          {touched.price && errors.price ? <text>{errors.price}</text> : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"date\">Data: </label>\r\n          <input\r\n            value={values.date}\r\n            onChange={handleChange}\r\n            type=\"date\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n          />\r\n          {touched.date && errors.date ? (<text>{errors.date}</text>) : null}\r\n        </div>\r\n        <input type=\"submit\" value=\"Enviar\"></input>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default addCompra\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n  const session = await auth0.getSession(req)\r\n  if (session) {\r\n    return {\r\n      props: {\r\n        user: session.user,\r\n      },\r\n    }\r\n  }\r\n  return {\r\n    props: {\r\n      user: 'Usuário não logado',\r\n      data: 'Dados inacessíveis',\r\n    },\r\n  }\r\n}\r\n\r\nconst salvarCompra = async (despesa, email) => {\r\n  console.log(despesa)\r\n  console.log(email)\r\n  const data = await fetch('http://localhost:3001/graphql', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      Authorization:\r\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `mutation{\r\n        createCompra(user:\"${email}\", input: {\r\n          description: \"${despesa.description}\"\r\n          price: ${despesa.price}, \r\n          date: \"${despesa.date}\", \r\n        }){\r\n          id\r\n          description\r\n        }\r\n      }`,\r\n    }),\r\n  })\r\n  console.log(data)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}