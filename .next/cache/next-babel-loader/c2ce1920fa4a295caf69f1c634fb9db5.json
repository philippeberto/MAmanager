{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\phili\\\\Projetos\\\\MAmanager\\\\pages\\\\despesas\\\\addDespesa.js\";\nimport React from 'react';\nimport auth0 from '../../lib/auth0';\nimport dayjs from 'dayjs';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst CriarDespesa = props => {\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    touched,\n    errors\n  } = useFormik({\n    initialValues: {\n      description: '',\n      price: '',\n      dueDate: '',\n      referenceMonth: '',\n      paymentDate: '',\n      paid: false\n    },\n    validationSchema: Yup.object({\n      description: Yup.string().required('Obrigatório'),\n      price: Yup.number().required('Obrigatório'),\n      dueDate: Yup.date().required('Obrigatório'),\n      referenceMonth: Yup.string().max(14, 'O mês deve ter no máximo 14 caracteres'),\n      paymentDate: Yup.string().max(30, 'Localidade deve ter no máximo 30 caracteres').required('Obrigatório'),\n      paid: Yup.boolean()\n    }),\n    onSubmit: values => {\n      console.log(values.dueDate);\n      console.log(values.paymentDate);\n      salvarDespesa(values, props.user.email);\n      alert(`Despesa ${values.description} salva com sucesso!`);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conteudo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nova Despesa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Descri\\xE7\\xE3o: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.description,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"description\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), touched.description && errors.description ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Valor: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.price,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"price\",\n          name: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), touched.price && errors.price ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 44\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dueDate\",\n          children: \"Data de Vencimento: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.dueDate,\n          onChange: handleChange,\n          type: \"date\",\n          id: \"dueDate\",\n          name: \"dueDate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), touched.dueDate && errors.dueDate ? /*#__PURE__*/_jsxDEV(\"text\", {\n          children: errors.dueDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"referenceMonth\",\n          children: \"M\\xEAs a ser pago: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: values.referenceMonth,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"referenceMonth\",\n          name: \"referenceMonth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"paymentDate\",\n            children: \"Dia do Pagamento: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: values.paymentDate,\n            onChange: handleChange,\n            type: \"date\",\n            id: \"paymentDate\",\n            name: \"paymentDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), touched.paymentDate && errors.paymentDate ? /*#__PURE__*/_jsxDEV(\"text\", {\n            children: errors.paymentDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CriarDespesa;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    return {\n      props: {\n        user: session.user\n      }\n    };\n  }\n\n  return {\n    props: {\n      user: 'Usuário não logado',\n      data: 'Dados inacessíveis'\n    }\n  };\n}\n\nconst salvarDespesa = async (despesa, email) => {\n  console.log(dayjs('YYYY-MM-DD'));\n  const data = await fetch('http://localhost:3001/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY'\n    },\n    body: JSON.stringify({\n      query: `mutation{\n        createDespesa(user:\"${email}\", input: {\n          description: \"${despesa.description}\"\n          price: ${despesa.price}, \n          dueDate: \"${despesa.dueDate}\", \n          referenceMonth: ${parseInt(despesa.referenceMonth)}, \n          paymentDate: \"${despesa.paymentDate}\",\n        }){\n          id\n          description\n        }\n      }`\n    })\n  });\n  console.log(data);\n};","map":{"version":3,"sources":["C:/Users/phili/Projetos/MAmanager/pages/despesas/addDespesa.js"],"names":["React","auth0","dayjs","useFormik","Yup","CriarDespesa","props","handleSubmit","handleChange","values","touched","errors","initialValues","description","price","dueDate","referenceMonth","paymentDate","paid","validationSchema","object","string","required","number","date","max","boolean","onSubmit","console","log","salvarDespesa","user","email","alert","getServerSideProps","req","res","session","getSession","data","despesa","fetch","method","headers","Accept","Authorization","body","JSON","stringify","query","parseInt"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport auth0 from '../../lib/auth0'\r\nimport dayjs from 'dayjs'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst CriarDespesa = (props) => {\r\n  const { handleSubmit, handleChange, values, touched, errors } = useFormik({\r\n    initialValues: {\r\n      description: '',\r\n      price: '',\r\n      dueDate: '',\r\n      referenceMonth: '',\r\n      paymentDate: '',\r\n      paid: false,\r\n    },\r\n    validationSchema: Yup.object({\r\n      description: Yup.string().required('Obrigatório'),\r\n      price: Yup.number().required('Obrigatório'),\r\n      dueDate: Yup.date().required('Obrigatório'),\r\n      referenceMonth: Yup.string().max(\r\n        14,\r\n        'O mês deve ter no máximo 14 caracteres',\r\n      ),\r\n      paymentDate: Yup.string()\r\n        .max(30, 'Localidade deve ter no máximo 30 caracteres')\r\n        .required('Obrigatório'),\r\n      paid: Yup.boolean(),\r\n    }),\r\n    onSubmit: (values) => {\r\n      console.log(values.dueDate)\r\n      console.log(values.paymentDate)\r\n      salvarDespesa(values, props.user.email)\r\n      alert(`Despesa ${values.description} salva com sucesso!`)\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className=\"conteudo\">\r\n      <h2>Nova Despesa</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"description\">Descrição: </label>\r\n          <input\r\n            value={values.description}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n          />\r\n          {touched.description && errors.description ? (\r\n            <text>{errors.description}</text>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"price\">Valor: </label>\r\n          <input\r\n            value={values.price}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"price\"\r\n            name=\"price\"\r\n          />\r\n          {touched.price && errors.price ? <text>{errors.price}</text> : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dueDate\">Data de Vencimento: </label>\r\n          <input\r\n            value={values.dueDate}\r\n            onChange={handleChange}\r\n            type=\"date\"\r\n            id=\"dueDate\"\r\n            name=\"dueDate\"\r\n          />\r\n          {touched.dueDate && errors.dueDate ? (\r\n            <text>{errors.dueDate}</text>\r\n          ) : null}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"referenceMonth\">Mês a ser pago: </label>\r\n          <input\r\n            value={values.referenceMonth}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"referenceMonth\"\r\n            name=\"referenceMonth\"\r\n          ></input>\r\n          <div>\r\n            <label htmlFor=\"paymentDate\">Dia do Pagamento: </label>\r\n            <input\r\n              value={values.paymentDate}\r\n              onChange={handleChange}\r\n              type=\"date\"\r\n              id=\"paymentDate\"\r\n              name=\"paymentDate\"\r\n            />\r\n            {touched.paymentDate && errors.paymentDate ? (\r\n              <text>{errors.paymentDate}</text>\r\n            ) : null}\r\n          </div>\r\n          <br />\r\n        </div>\r\n        <input type=\"submit\" value=\"Cadastrar\"></input>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CriarDespesa\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n  const session = await auth0.getSession(req)\r\n  if (session) {\r\n    return {\r\n      props: {\r\n        user: session.user,\r\n      },\r\n    }\r\n  }\r\n  return {\r\n    props: {\r\n      user: 'Usuário não logado',\r\n      data: 'Dados inacessíveis',\r\n    },\r\n  }\r\n}\r\n\r\nconst salvarDespesa = async (despesa, email) => {\r\n  console.log(dayjs('YYYY-MM-DD'))\r\n  const data = await fetch('http://localhost:3001/graphql', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      Authorization:\r\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `mutation{\r\n        createDespesa(user:\"${email}\", input: {\r\n          description: \"${despesa.description}\"\r\n          price: ${despesa.price}, \r\n          dueDate: \"${despesa.dueDate}\", \r\n          referenceMonth: ${parseInt(despesa.referenceMonth)}, \r\n          paymentDate: \"${despesa.paymentDate}\",\r\n        }){\r\n          id\r\n          description\r\n        }\r\n      }`,\r\n    }),\r\n  })\r\n  console.log(data)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}