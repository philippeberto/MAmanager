{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport dayjs from 'dayjs';\n\nvar MensalidadesResumo = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var cdate, firstDay, lastDay, data, mensalidadesDB, mensalidades, total, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cdate = new Date();\n            firstDay = new Date(cdate.getFullYear(), cdate.getMonth(), 1);\n            lastDay = new Date(cdate.getFullYear(), cdate.getMonth() + 1, 0);\n            firstDay = dayjs(firstDay).format('YYYY-MM-DD');\n            lastDay = dayjs(lastDay).format('YYYY-MM-DD');\n            _context.next = 7;\n            return fetch('http://localhost:3001/graphql', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n                Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY'\n              },\n              body: JSON.stringify({\n                query: \"{ \\n        findMensalidadesByPeriod(user: \\\"philippe.bjj@gmail.com\\\", input: {\\n            idate: \\\"\".concat(firstDay, \"\\\"\\n            fdate: \\\"\").concat(lastDay, \"\\\"\\n          }) {\\n            price\\n        } }\")\n              })\n            });\n\n          case 7:\n            data = _context.sent;\n            _context.next = 10;\n            return data.json();\n\n          case 10:\n            mensalidadesDB = _context.sent;\n            mensalidades = mensalidadesDB.data.findMensalidadesByPeriod;\n            console.log(mensalidades);\n            total = 0;\n            mensalidades.map(function (mensalidade) {\n              total += mensalidade.price;\n            });\n            console.log(total);\n            result = parseInt(total);\n            console.log(result);\n            return _context.abrupt(\"return\", result);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function MensalidadesResumo() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = MensalidadesResumo;\nexport default MensalidadesResumo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MensalidadesResumo\");","map":{"version":3,"sources":["C:/Users/phili/Projetos/MAmanager/Components/MensalidadesResumo.js"],"names":["dayjs","MensalidadesResumo","cdate","Date","firstDay","getFullYear","getMonth","lastDay","format","fetch","method","headers","Accept","Authorization","body","JSON","stringify","query","data","json","mensalidadesDB","mensalidades","findMensalidadesByPeriod","console","log","total","map","mensalidade","price","result","parseInt"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,kBAAkB;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,YAAAA,KADmB,GACX,IAAIC,IAAJ,EADW;AAErBC,YAAAA,QAFqB,GAEV,IAAID,IAAJ,CAASD,KAAK,CAACG,WAAN,EAAT,EAA8BH,KAAK,CAACI,QAAN,EAA9B,EAAgD,CAAhD,CAFU;AAGrBC,YAAAA,OAHqB,GAGX,IAAIJ,IAAJ,CAASD,KAAK,CAACG,WAAN,EAAT,EAA8BH,KAAK,CAACI,QAAN,KAAmB,CAAjD,EAAoD,CAApD,CAHW;AAIzBF,YAAAA,QAAQ,GAAGJ,KAAK,CAACI,QAAD,CAAL,CAAgBI,MAAhB,CAAuB,YAAvB,CAAX;AACAD,YAAAA,OAAO,GAAGP,KAAK,CAACO,OAAD,CAAL,CAAeC,MAAf,CAAsB,YAAtB,CAAV;AALyB;AAAA,mBAMNC,KAAK,CAAC,+BAAD,EAAkC;AACxDC,cAAAA,MAAM,EAAE,MADgD;AAExDC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEPC,gBAAAA,MAAM,EAAE,kBAFD;AAGPC,gBAAAA,aAAa,EACX;AAJK,eAF+C;AAQxDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,gBAAAA,KAAK,kHAEWb,QAFX,sCAGWG,OAHX;AADc,eAAf;AARkD,aAAlC,CANC;;AAAA;AAMnBW,YAAAA,IANmB;AAAA;AAAA,mBAwBIA,IAAI,CAACC,IAAL,EAxBJ;;AAAA;AAwBnBC,YAAAA,cAxBmB;AAyBnBC,YAAAA,YAzBmB,GAyBJD,cAAc,CAACF,IAAf,CAAoBI,wBAzBhB;AA0BzBC,YAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACII,YAAAA,KA3BqB,GA2Bb,CA3Ba;AA4BzBJ,YAAAA,YAAY,CAACK,GAAb,CAAiB,UAACC,WAAD,EAAiB;AAChCF,cAAAA,KAAK,IAAIE,WAAW,CAACC,KAArB;AACD,aAFD;AAGAL,YAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACMI,YAAAA,MAhCmB,GAgCVC,QAAQ,CAACL,KAAD,CAhCE;AAiCzBF,YAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AAjCyB,6CAkClBA,MAlCkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlB5B,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;KAAMA,kB;AAqCN,eAAeA,kBAAf","sourcesContent":["import dayjs from 'dayjs'\r\n\r\nconst MensalidadesResumo = async () => {\r\n  const cdate = new Date();\r\n  let firstDay = new Date(cdate.getFullYear(), cdate.getMonth(), 1);\r\n  let lastDay = new Date(cdate.getFullYear(), cdate.getMonth() + 1, 0);\r\n  firstDay = dayjs(firstDay).format('YYYY-MM-DD')\r\n  lastDay = dayjs(lastDay).format('YYYY-MM-DD')\r\n  const data = await fetch('http://localhost:3001/graphql', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      Authorization:\r\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `{ \r\n        findMensalidadesByPeriod(user: \"philippe.bjj@gmail.com\", input: {\r\n            idate: \"${firstDay}\"\r\n            fdate: \"${lastDay}\"\r\n          }) {\r\n            price\r\n        } }`,\r\n    }),\r\n  })\r\n  const mensalidadesDB = await data.json()\r\n  const mensalidades = mensalidadesDB.data.findMensalidadesByPeriod\r\n  console.log(mensalidades)\r\n  let total = 0\r\n  mensalidades.map((mensalidade) => {\r\n    total += mensalidade.price\r\n  })\r\n  console.log(total)\r\n  const result = parseInt(total)\r\n  console.log(result)\r\n  return result\r\n}\r\n\r\nexport default MensalidadesResumo"]},"metadata":{},"sourceType":"module"}