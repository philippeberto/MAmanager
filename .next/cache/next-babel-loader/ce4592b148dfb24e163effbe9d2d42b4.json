{"ast":null,"code":"import dayjs from 'dayjs';\n\nconst mensalidadesResumo = () => {\n  const soma = somaMensalidades();\n  return 120;\n};\n\nexport default mensalidadesResumo;\n\nconst somaMensalidades = async () => {\n  const cdate = new Date();\n  let firstDay = new Date(cdate.getFullYear(), cdate.getMonth(), 1);\n  let lastDay = new Date(cdate.getFullYear(), cdate.getMonth() + 1, 0);\n  firstDay = dayjs(firstDay).format('YYYY-MM-DD');\n  lastDay = dayjs(lastDay).format('YYYY-MM-DD');\n  const data = await fetch('http://localhost:3001/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY'\n    },\n    body: JSON.stringify({\n      query: `{\n        findMensalidadesByPeriod(user:\"philippe.bjj@gmail.com\",input:{\n          idate: \"2020-11-01\"\n          fdate: \"2020-11-30\"\n        })\n      }`\n    })\n  });\n  const mensalidadesDB = await data.json();\n  const mensalidades = parseInt(mensalidadesDB.data.findMensalidadesByPeriod);\n  return mensalidades;\n};","map":{"version":3,"sources":["C:/Users/phili/Projetos/MAmanager/utils/mensalidadeResumo.js"],"names":["dayjs","mensalidadesResumo","soma","somaMensalidades","cdate","Date","firstDay","getFullYear","getMonth","lastDay","format","data","fetch","method","headers","Accept","Authorization","body","JSON","stringify","query","mensalidadesDB","json","mensalidades","parseInt","findMensalidadesByPeriod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAMC,IAAI,GAAGC,gBAAgB,EAA7B;AACA,SAAO,GAAP;AACD,CAHD;;AAKA,eAAeF,kBAAf;;AAEA,MAAME,gBAAgB,GAAG,YAAY;AACnC,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,MAAIC,QAAQ,GAAG,IAAID,IAAJ,CAASD,KAAK,CAACG,WAAN,EAAT,EAA8BH,KAAK,CAACI,QAAN,EAA9B,EAAgD,CAAhD,CAAf;AACA,MAAIC,OAAO,GAAG,IAAIJ,IAAJ,CAASD,KAAK,CAACG,WAAN,EAAT,EAA8BH,KAAK,CAACI,QAAN,KAAmB,CAAjD,EAAoD,CAApD,CAAd;AACAF,EAAAA,QAAQ,GAAGN,KAAK,CAACM,QAAD,CAAL,CAAgBI,MAAhB,CAAuB,YAAvB,CAAX;AACAD,EAAAA,OAAO,GAAGT,KAAK,CAACS,OAAD,CAAL,CAAeC,MAAf,CAAsB,YAAtB,CAAV;AACA,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AACxDC,IAAAA,MAAM,EAAE,MADgD;AAExDC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE,kBAFD;AAGPC,MAAAA,aAAa,EACX;AAJK,KAF+C;AAQxDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAG;AACd;AACA;AACA;AACA;AACA;AANyB,KAAf;AARkD,GAAlC,CAAxB;AAiBA,QAAMC,cAAc,GAAG,MAAMV,IAAI,CAACW,IAAL,EAA7B;AACA,QAAMC,YAAY,GAAGC,QAAQ,CAACH,cAAc,CAACV,IAAf,CAAoBc,wBAArB,CAA7B;AACA,SAAOF,YAAP;AACD,CA1BD","sourcesContent":["import dayjs from 'dayjs'\r\n\r\nconst mensalidadesResumo = () => {\r\n  const soma = somaMensalidades()\r\n  return 120\r\n}\r\n\r\nexport default mensalidadesResumo\r\n\r\nconst somaMensalidades = async () => {\r\n  const cdate = new Date();\r\n  let firstDay = new Date(cdate.getFullYear(), cdate.getMonth(), 1);\r\n  let lastDay = new Date(cdate.getFullYear(), cdate.getMonth() + 1, 0);\r\n  firstDay = dayjs(firstDay).format('YYYY-MM-DD')\r\n  lastDay = dayjs(lastDay).format('YYYY-MM-DD')\r\n  const data = await fetch('http://localhost:3001/graphql', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      Authorization:\r\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJmcm9udC1lbmQtS2U0Z3JnNzRocjRkY2I2IiwiaWF0IjoxNTk3ODU3NTg2fQ.MVQIQxXkVgbhCFzYRwIiAtJZHbYN0UqiJGBndMLKAGY',\r\n    },\r\n    body: JSON.stringify({\r\n      query: `{\r\n        findMensalidadesByPeriod(user:\"philippe.bjj@gmail.com\",input:{\r\n          idate: \"2020-11-01\"\r\n          fdate: \"2020-11-30\"\r\n        })\r\n      }`,\r\n    }),\r\n  })\r\n  const mensalidadesDB = await data.json()\r\n  const mensalidades = parseInt(mensalidadesDB.data.findMensalidadesByPeriod)\r\n  return mensalidades\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}